# ──── BASE CUDA IMAGE ───────────────────────────────────
FROM nvidia/cuda:11.8.0-runtime-ubuntu22.04

# avoid interactive prompts
ENV DEBIAN_FRONTEND=noninteractive

# ──── WORKDIR ───────────────────────────────────────────
WORKDIR /app

# ──── SYSTEM PACKAGES ───────────────────────────────────
RUN apt-get update \
 && apt-get install -y --no-install-recommends \
      python3.10 python3-pip \
      libopenblas-dev apt-utils cron \
      curl jq \
 && rm -rf /var/lib/apt/lists/*

# speed up pip
ENV PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PIP_ROOT_USER_ACTION=ignore

# ──── PYTHON DEPENDENCIES ───────────────────────────────
COPY docker/requirements.gpu.txt /app/requirements.gpu.txt

# pin numpy<2 so pre-built FAISS wheels load without the "multiarray" error
RUN pip install --no-cache-dir --upgrade pip wheel setuptools "numpy<2" \
 && pip install --no-cache-dir --use-pep517 -r requirements.gpu.txt

# ──── APP CODE + AUTO-TERMINATOR ────────────────────────
COPY src/ /app/src
COPY docker/auto_terminate.sh /app/auto_terminate.sh
RUN chmod +x /app/auto_terminate.sh

# ──── DATA VOLUMES ─────────────────────────────────────
# create both the vector index folder and the static images folder
RUN mkdir -p /data/images \
 && chmod -R 777 /data

ENV FAISS_INDEX_PATH=/data/vector.index \
    IMAGE_STORAGE_PATH=/data/images

# ──── PORT + ENTRYPOINT ─────────────────────────────────
EXPOSE 8000

# run auto-terminate in background, then start uvicorn
ENTRYPOINT ["sh","-c"]
CMD ["/app/auto_terminate.sh & exec uvicorn src.api.gpu_server:app --host 0.0.0.0 --port 8000"]
