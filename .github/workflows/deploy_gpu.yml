name: üöÄ CI/CD ‚Äì GPU Image-Search Service

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  SERVICE_NAME: multi-rag-image-service
  IMAGE_NAME: ghcr.io/${{ secrets.GHCR_USER.lower() }}/faiss-gpu-api:latest
  GPU_SERVICE_PORT: 8000

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      packages: write

    steps:
    - name: üì• Checkout code
      uses: actions/checkout@v3

    - name: üîê Configure Docker credentials
      run: |
        mkdir -p ~/.docker
        echo '{"credsStore":"pass"}' > ~/.docker/config.json

    - name: üêç Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: üê≥ Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: "image=moby/buildkit:latest"

    - name: üßπ Clean up unused Docker objects
      run: docker system prune -f --filter "until=2h"

    - name: üõ† Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y jq
        pip install runpod

    - name: ‚úÖ Verify GHCR access
      env:
        GHCR_USER: ${{ secrets.GHCR_USER }}
        GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
      run: |
        # Verify credentials and repository exists
        curl -su "${GHCR_USER}:${GHCR_TOKEN}" \
          "https://ghcr.io/v2/" | jq .errors || true
        
        # Verify image permissions
        TOKEN=$(curl -su "$GHCR_USER:$GHCR_TOKEN" \
          "https://ghcr.io/token?service=ghcr.io&scope=repository:${GHCR_USER}/faiss-gpu-api:pull,push" \
          | jq -r .token)
        
        curl -sH "Authorization: Bearer $TOKEN" \
          "https://ghcr.io/v2/${GHCR_USER}/faiss-gpu-api/tags/list" | jq

    - name: üèóÔ∏è Build & Push Docker Image
      env:
        GHCR_USER: ${{ secrets.GHCR_USER }}
        GHCR_TOKEN: ${{ secrets.GHCR_TOKEN }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
      run: |
        # Secure login with credential store
        echo "$GHCR_TOKEN" | docker login ghcr.io \
          -u "$GHCR_USER" \
          --password-stdin

        # Build with platform awareness
        docker buildx build \
          --platform linux/amd64 \
          --no-cache \
          -f docker/Dockerfile.gpu \
          -t "$IMAGE_NAME" \
          --push \
          .

        # Verify push
        docker pull "$IMAGE_NAME" || exit 1

    - name: üöÄ Deploy to RunPod
      env:
        RUNPOD_API_KEY: ${{ secrets.RUNPOD_API_KEY }}
        API_AUTH_TOKEN: ${{ secrets.API_AUTH_TOKEN }}
        FAISS_INDEX_PATH: ${{ secrets.FAISS_INDEX_PATH }}
        GPU_API_URL: ${{ secrets.GPU_API_URL }}
        IMAGE_NAME: ${{ env.IMAGE_NAME }}
      run: |
        python3 scripts/deploy_gpu.py